# A Docker Compose must always start with the version tag.
version: '3.9'

# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    restart: always
    # Official MaridaDB image from DockerHub (we use the last version)
    image: 'mariadb:latest'

    container_name: maria_db

    # By default, a MaridaDB database is running on the 3306 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      - 3306:3306

    environment:
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # The MaridaDB root password (useful to connect to the database)
      MARIADB_DATABASE: ${MYSQL_DATABASE} # The MaridaDB default database (automatically created at first launch)
      

    ####
    ## If you want to persist the database data, please uncomment the lines below.
    ####

    # The `volumes` tag allows us to share a folder with our container.
    # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
    volumes:
      # In this example, we share the folder `db-data` in our root repository, with the default 3306 data path.
      # It means that every time the repository is modifying the data inside
      # of `/var/lib/mysql`, automatically the change will appear in `db-data`.
      # You don't need to create the `db-data` folder. Docker Compose will do it for you.
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init-db-01.sql
      - ~/db-data/:/var/lib/mysql

    # restart: always

  # Mailhog service
  # Uncomment to run the dev server mail
  mailhog:
    image: 'mailhog/mailhog'

    container_name: 'mailhog'

    # the SMTP server starts on port 1025
    # the HTTP server starts on port 8025
    ports:
      - "1025:1025"
      - "8025:8025"

  homeset-api:
    restart: always
    image: 'homeset-api'
    container_name: 'homeset-api-prod'
    build:
      context: .
      dockerfile: 'Dockerfile'
    ports:
      - "${PORT}:${PORT}"
    external_links:
      - database
    depends_on:
      - database
