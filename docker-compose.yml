# A Docker Compose must always start with the version tag.
version: '3'

# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    restart: always
    # Official postgres image from DockerHub (we use the last version)
    image: 'postgres:latest'

    container_name: 'postgres-homeset-dev'

    ports:
      - 15432:5432      
    env_file:
      - .env # The name of your environment file (the one at the repository root)

    ####
    ## If you want to persist the database data, please uncomment the lines below.
    ####

    # The `volumes` tag allows us to share a folder with our container.
    # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
    volumes:
      # In this example, we share the folder `db-data` in our root repository, with the default 3306 data path.
      # It means that every time the repository is modifying the data inside
      # of `/var/lib/mysql`, automatically the change will appear in `db-data`.
      # You don't need to create the `db-data` folder. Docker Compose will do it for you.
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init-db-01.sql
      - ./db-data/:/var/lib/postgresql/data/

    # restart: always

  # Mailhog service
  # Uncomment to run the dev server mail
  mailhog:
    image: 'mailhog/mailhog'

    container_name: 'mailhog-homeset-dev'

    # the SMTP server starts on port 1025
    # the HTTP server starts on port 8025
    ports:
      - "1025:1025"
      - "8025:8025"

  homeset-api:
    restart: always
    image: 'homeset-api'
    container_name: 'api-homeset-dev'
    build:
      context: .
      dockerfile: 'Dockerfile.dev'
    ports:
      - "${PORT}:${PORT}"
    external_links:
      - database
    depends_on:
      - database
